#include "crow.h"
#include <iostream>
#include <fstream>
#include <nlohmann/json.hpp> 

using json = nlohmann::json;

// Function to check login
bool checkLogin(const std::string& username, const std::string& password) {
    std::ifstream file("users.txt");
    std::string fileUsername, filePassword;
    if (file.is_open()) {
        while (file >> fileUsername >> filePassword) {
            if (fileUsername == username && filePassword == password) {
                return true;
            }
        }
        file.close();
    }
    return false;
}

// Function to register a new user
bool registerUser(const std::string& username, const std::string& password) {
    std::ofstream file("users.txt", std::ios::app);
    if (file.is_open()) {
        file << username << " " << password << std::endl;
        file.close();
        return true;
    }
    return false;
}

int main() {
    crow::SimpleApp app;

    // Login route
    CROW_ROUTE(app, "/login").methods("POST"_method)([](const crow::request& req) {
        auto data = json::parse(req.body);
        std::string username = data["username"];
        std::string password = data["password"];

        if (checkLogin(username, password)) {
            return crow::response(200, json({{"message", "Login successful"}}).dump());
        } else {
            return crow::response(401, json({{"message", "Invalid credentials"}}).dump());
        }
    });

    // Register route
    CROW_ROUTE(app, "/register").methods("POST"_method)([](const crow::request& req) {
        auto data = json::parse(req.body);
        std::string username = data["username"];
        std::string password = data["password"];

        if (registerUser(username, password)) {
            return crow::response(200, json({{"message", "Registration successful"}}).dump());
        } else {
            return crow::response(500, json({{"message", "Registration failed"}}).dump());
        }
    });

    app.port(8080).multithreaded().run();
}
